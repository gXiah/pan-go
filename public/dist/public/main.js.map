{"version":3,"sources":["./src/app/views/profile-view/profile-view.component.ts","./src/app/views/profile-view/profile-view.component.html","./src/app/modules/navbar/navbar.module.ts","./src/app/request-interceptor.service.ts","./src/environments/environment.ts","./src/app/modules/navbar/navbar/navbar.component.ts","./src/app/modules/navbar/navbar/navbar.component.html","./src/app/request-handler.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/views/contact-search-view/contact-search-view.component.ts","./src/app/views/contact-search-view/contact-search-view.component.html","./src/app/views/login-view/login-view.component.ts","./src/app/views/login-view/login-view.component.html","./src/app/views/my-contacts-view/my-contacts-view.component.ts","./src/app/views/my-contacts-view/my-contacts-view.component.html","./src/app/views/registration-view/registration-view.component.ts","./src/app/views/registration-view/registration-view.component.html","./src/app/profile.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from 'src/app/profile.service';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n\n@Component({\n  selector: 'app-profile-view',\n  templateUrl: './profile-view.component.html',\n  styleUrls: ['./profile-view.component.scss']\n})\nexport class ProfileViewComponent implements OnInit {\n\n\tprofile: any\n\n\tcurrentSession = {_id:null}\n\tquery_id = null;\n\tsessionOk = false;\n\n  \tconstructor(private profileService: ProfileService, private route: ActivatedRoute){\n  \t\t\n  \t\tthis.currentSession[\"_id\"] = localStorage.getItem('_id');\n\n  \t\tif(typeof this.currentSession._id !== 'undefined'){\n  \t\t\tif(this.currentSession._id !== null){\n\n  \t\t\t\tthis.route.paramMap.subscribe( (params) => {\n  \t\t\t\t\tthis.query_id = params['params'].id;\n  \t\t\t\t});\n\n  \t\t\t\tif(this.currentSession._id == this.query_id){\n  \t\t\t\t\tthis.sessionOk = true;\n  \t\t\t\t}else{\n  \t\t\t\t\tthis.sessionOk = false;\n  \t\t\t\t}\n\n  \t\t\t}\n  \t\t}\n\n  \t\t// for this showcase version, we do not double check the localStorage Id\n  \t\tthis.profile = this.getProfileData();\n  \t}\n\n  \tngOnInit(): void {}\n\n  \tgetProfileData(){\n  \t\t// if(this.sessionOk){\n  \t\t\tthis.profileService\n  \t\t\t\t.getProfileById(this.query_id)\n  \t\t\t\t.subscribe( (res: any) => {\n  \t\t\t\t\tconsole.log(res);\n  \t\t\t\t\treturn this.profile = res;\n  \t\t\t\t});\n  \t\t// }\n  \t}\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container focused-container\" id=\"contact-search-container\">\n\t\n\t<div class=\"row title-container\">\n\t\t<h1 class=\"col-10\">My profile</h1>\n\t</div>\n\n\n\t<!-- Results list container -->\n\t<div class=\"row form-container\">\n\n\t\t\n\t\t<form \n\t\t\taction=\"#\" method=\"\" id=\"registration-form\" \n\t\t\t*ngFor=\"let p of profile\">\n\t\t\t\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Email adress <span class=\"required\"></span> </label>\n\t\t\t\t<input #email type=\"email\" class=\"form-control text-input\" value=\"{{ p.email }}\" \tplaceholder=\"example@provider.com\" [disabled]=\"!sessionOk\">\n\t\t\t\t<small  class=\"form-text text-muted\">Required</small>\n\t\t\t</div>\n\n\t\t\t<!-- <div class=\"form-group\">\n\t\t\t\t<label>Password</label>\n\t\t\t\t<input class=\"form-control text-input\" disabled placeholder=\"You cannot change your password\">\n\t\t\t\t<small  class=\"form-text text-muted\">Not functioning </small>\n\t\t\t</div> -->\n\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Name <span class=\"required\"></span> </label>\n\t\t\t\t<input #name type=\"text\" class=\"form-control text-input\" value=\"{{ p.name }}\" \tplaceholder=\"Your name\" [disabled]=\"!sessionOk\">\n\t\t\t\t<small  class=\"form-text text-muted\">Required</small>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Current age</label>\n\t\t\t\t<input #age type=\"number\" class=\"form-control text-input\" value=\"{{ p.age }}\" [disabled]=\"!sessionOk\" >\n\t\t\t\t<small  class=\"form-text text-muted\">(Not birth dates for this version)</small>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Family</label>\n\t\t\t\t<input #family type=\"text\" class=\"form-control text-input\" value=\"{{ p.family }}\" placeholder=\"Generic pangolin family\" [disabled]=\"!sessionOk\">\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Race</label>\n\t\t\t\t<input #race type=\"text\" class=\"form-control text-input\" value=\"{{ p.race }}\"  placeholder=\"Race #1\" [disabled]=\"!sessionOk\">\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Food category</label>\n\t\t\t\t<input #food type=\"text\" class=\"form-control text-input\" value=\"{{ p.food }}\"  placeholder=\"Classic pangolin food\" [disabled]=\"!sessionOk\">\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\" *ngIf=\"sessionOk\">\n\t\t\t\t<button \n\t\t\t\t\ttype=\"submit\" class=\"btn btn-success\" \n\t\t\t\t\t\n\t\t\t\t>\n\t\t\t\t\tUpdate your profile info\n\t\t\t\t</button>\n\n\t\t\t</div>\n\n\t\t\t\n\n\t\t\t<hr>\n\n\t\t\t<br>\n\n\t\t\t<div class=\"form-group\" style=\"text-align: center;\">\n\t\t\t\t<a href=\"/\" >\n\t\t\t\t\tReturn to home page\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t</form>\n\t\t\n\n\t</div>\n\n\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n  \tNavbarComponent\n  ]\n})\nexport class NavbarModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, empty } from 'rxjs';\nimport { catchError, tap, switchMap } from 'rxjs/operators';\n\nimport { ProfileService } from './profile.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestInterceptorService implements HttpInterceptor {\n\n\trefreshedToken;\n\n\tconstructor(private profileService: ProfileService) { }\n\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<any>{\n\n\t\trequest = this.appendAuthHeader(request);\n\n\t\treturn next\n\t\t\t\t.handle(request)\n\t\t\t\t.pipe(\n\t\t\t\t\tcatchError( (error: HttpErrorResponse) => {\n\t\t\t\t\t\tconsole.log(error);\n\n\t\t\t\t\t\tif(error.status === 401 && !this.refreshedToken){\n\t\t\t\t\t\t\treturn this.refreshToken().pipe(\n\t\t\t\t\t\t\t\tswitchMap( () => {\n\t\t\t\t\t\t\t\t\trequest = this.appendAuthHeader(request);\n\t\t\t\t\t\t\t\t\treturn next.handle(request);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tcatchError( (err: any) => {\n\t\t\t\t\t\t\t\t\tthis.profileService.logout();\n\t\t\t\t\t\t\t\t\treturn empty();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}else if(error.status === 401){\n\t\t\t\t\t\t\tthis.profileService.logout();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn throwError(error);\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t}\n\n\t\trefreshToken(){\n\n\t\t\tthis.refreshedToken = true;\n\n\t\t\treturn this.profileService.getNewToken().pipe(\n\t\t\t\ttap( () => {\n\t\t\t\t\tthis.refreshedToken = false;\n\t\t\t\t\tconsole.log('Access token refreshed');\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\tappendAuthHeader(request: HttpRequest<any>){\n\t\tconst token = this.profileService.getToken();\n\n\t\tif(token){\n\t\t\treturn request.clone({\n\t\t\t\tsetHeaders:{\n\t\t\t\t\t'x-access-token': token\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn request;\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\nimport { ProfileService } from 'src/app/profile.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n\tcurrentSession = {_id:null};\n\tsessionOk = false;\n\n \tconstructor(private profileService: ProfileService){\n\n  \t\tthis.currentSession[\"_id\"] = localStorage.getItem('_id');\n  \t\t// this.currentSession[\"x-access-token\"] = localStorage.getItem('x-access-token');\n  \t\t// this.currentSession[\"x-refresh-token\"] = localStorage.getItem('x-refresh-token');\n  \t\t\n  \t\t// Checking session validity\n  \t\t// For this showcase version, we will trust the back-end API and not double check\n  \t\tif(typeof this.currentSession._id !== 'undefined'){\n  \t\t\tif(this.currentSession._id !== null){\n  \t\t\t\tthis.sessionOk = true;\n  \t\t\t}\n  \t\t}\n\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\n  \tsignOut(){\n  \t\tconsole.log(\"Signing out ...\");\n  \t\tthis.sessionOk = false;\n  \t\tthis.profileService.logout();\n  \t}\n\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t<a class=\"navbar-brand\" href=\"#\">\n\tPan<span style=\"color:orange;\">Go</span>\n\t</a>\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n<span class=\"navbar-toggler-icon\"></span>\n</button>\n\n<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t<ul class=\"navbar-nav mr-auto\">\n\n\t\t<li class=\"nav-item active\">\n\t\t\t<a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n\t\t</li>\n\n\t\t<li class=\"nav-item active\">\n\t\t\t<a class=\"nav-link\" *ngIf=\"!sessionOk\" href=\"/login\">Log in <span class=\"sr-only\">(current)</span></a>\n\t\t</li>\n\n\t\t<li class=\"nav-item active\">\n\t\t\t<a class=\"nav-link\"  *ngIf=\"!sessionOk\"  href=\"/register\">Sign up <span class=\"sr-only\">(current)</span></a>\n\t\t</li>\n\n\t\t\n\n\t\t\n\t</ul>\n\t<form class=\"form-inline my-2 my-lg-0\">\n\n \n\t\t<a class=\"nav-link\" *ngIf=\"sessionOk\" href=\"/me/{{ currentSession._id }}\">\n\t\t\tMy profile\n\t\t</a>\n\n\t\t\n\t\t<a class=\"nav-link\" *ngIf=\"sessionOk\" (click)=\"signOut()\">\n\t\t\tSign out\n\t\t</a>\n\n\t\t<!-- <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Not functioning yet ... Search\" aria-label=\"Search\">\n\t\t<button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> -->\n\t</form>\n</div>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestHandlerService {\n\n\treadonly ROOT;\n  headers;\n\n  \tconstructor(private http: HttpClient){\n      // this.ROOT = 'http://localhost:8080';\n  \t\tthis.ROOT = 'http://adaquesbi.me:8080';\n      \n      this.headers = new HttpHeaders();\n  \t}\n\n  \tget(uri: string){\n  \t\treturn this.http.get(`${this.ROOT}/${uri}`);\n  \t}\n\n  \tdelete(uri: string){\n  \t\treturn this.http.delete(`${this.ROOT}/${uri}`);\n  \t}\n\n  \tpost(uri: string, payload: Object){\n  \t\treturn this.http.post(`${this.ROOT}/${uri}`, payload);\n  \t} \n      login_post(uri: string, payload: Object){\n        return this.http.post(`${this.ROOT}/login`, payload, { observe: 'response' });\n      }\n\n  \tpatch(uri: string, payload: Object){\n  \t\treturn this.http.patch(`${this.ROOT}/${uri}`, payload);\n  \t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'public';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactSearchViewComponent } from './views/contact-search-view/contact-search-view.component';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RegistrationViewComponent } from './views/registration-view/registration-view.component';\nimport { LoginViewComponent } from './views/login-view/login-view.component';\nimport { ProfileViewComponent } from './views/profile-view/profile-view.component';\nimport { MyContactsViewComponent } from './views/my-contacts-view/my-contacts-view.component';\n\nimport { RequestInterceptorService } from './request-interceptor.service';\n\nimport { NavbarModule } from './modules/navbar/navbar.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactSearchViewComponent,\n    RegistrationViewComponent,\n    LoginViewComponent,\n    ProfileViewComponent,\n    MyContactsViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NavbarModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptorService, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from 'src/app/profile.service';\n\n@Component({\n  selector: 'app-contact-search-view',\n  templateUrl: './contact-search-view.component.html',\n  styleUrls: ['./contact-search-view.component.scss']\n})\nexport class ContactSearchViewComponent implements OnInit {\n\n    profiles: any;\n    currentId: any;\n\n  \tconstructor(private profileService: ProfileService){}\n\n  \tngOnInit(): void {\n  \t\tthis.getAllProfiles();\n      this.currentId = localStorage.getItem('_id');\n\n  \t}\n\n    \n    getAllContacts(sourceId: any){\n      \n    }\n\n  \tgetAllProfiles(){\n  \t\tthis.profileService.getAllProfiles().subscribe(\n  \t\t\t(response: any) => { this.profiles = response; }\n  \t\t);\n  \t}\n\n    getSearchProfiles(query: string){\n      this.profileService.getSearchProfiles(query).subscribe(\n        (response: any) => { this.profiles = response; }\n      );\n    }\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container focused-container\" id=\"contact-search-container\">\n\t\n\t<div class=\"row title-container\">\n\t\t<h1 class=\"col-10\">Search for contacts</h1>\n\t</div>\n\n\t<!-- Search bar container -->\n\t<div class=\"row search-bar-container\">\n\t\t\n\t\t<div class=\"col-12\" style=\"padding: 0 !important;\">\n\t\t\t\n\t\t\t\n\t\t\t\t<input #searchQuery\n\t\t\t\t\t\ttype=\"text\" name=\"contact_search_input\"\n\t\t\t\t\t\tplaceholder=\" Search for a Pangolin\" \n\t\t\t\t\t\t(keydown)=\"getSearchProfiles(searchQuery.value)\"\n\t\t\t\t/>\n\t\t</div>\n\n\t</div>\n\n\n\t<!-- Results list container -->\n\t<div class=\"row results-container\">\n\n\t\t<div class=\"col-12 result-item\" *ngFor=\"let profile of profiles\">\n\n\t\t\t<div class=\"row\">\n\t\t\t\t\n\t\t\t\t<div class=\"col-4\" style=\"text-align-last: left;padding-left: 60px;\">\n\t\t\t\t\t<a href=\"/my-profile/{{ profile._id }}\">{{ profile.name }}</a>\n\t\t\t\t\t<span class=\"badge\" *ngIf=\"currentId === profile._id\" style=\"margin-left: 10px;\">\n\t\t\t\t\t\tYou\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-3\"></div>\n\t\t\t\t<div class=\"col-4\" style=\"text-align: right;\" *ngIf=\"currentId != profile._id\">\n\n\t\t\t\t\t<button class=\"btn btn-sm btn-success add_contact_btn\">\n\t\t\t\t\t\t<i class=\"fas fa-plus\"> Add contact</i>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"btn btn-sm btn-danger add_contact_btn hidden\">\n\t\t\t\t\t\t<i class=\"fas fa-times\">Remove contact</i>\n\t\t\t\t\t</button>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t\n\n\t</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { ProfileService } from 'src/app/profile.service';\n\n\n@Component({\n  selector: 'app-login-view',\n  templateUrl: './login-view.component.html',\n  styleUrls: ['./login-view.component.scss']\n})\nexport class LoginViewComponent implements OnInit {\n\n\tconstructor(private profileService: ProfileService){}\n\n\tngOnInit(): void {}\n\n\tlogin(email: string, password: string){\n\n\t\tconsole.log(\"logging in\");\n\n\t\tthis.profileService\n\t\t\t.login(email, password)\n\t\t\t.subscribe((res: HttpResponse<any>) => {\n\t\t\t\tconsole.log(res);\n\t\t\t});\n\t}\n\n}\n","<app-navbar></app-navbar>\n<div class=\"container focused-container\" id=\"contact-search-container\">\n\t\n\t<div class=\"row title-container\">\n\t\t<h1 class=\"col-10\">Log in</h1>\n\t</div>\n\n\n\t<!-- Results list container -->\n\t<div class=\"row form-container\">\n\n\t\t\n\t\t<form id=\"registration-form\" action=\"/\">\n\t\t\t\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Your email adress <span class=\"required\"></span> </label>\n\t\t\t\t<input #email value=\"user#1@provider.com\" type=\"email\" class=\"form-control\"\tplaceholder=\"example@provider.com\">\n\t\t\t\t<small  class=\"form-text text-muted\">Required</small>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Password <span class=\"required\"></span> </label>\n\t\t\t\t<input #password value=\"password\" type=\"password\" class=\"form-control\"\tplaceholder=\"Choose a password\">\n\t\t\t\t<small  class=\"form-text text-muted\">Required</small>\n\t\t\t</div>\n\n\t\t\t\n\n\n\t\t\t<div class=\"form-group\">\n\n\t\t\t\t<a \n\t\t\t\t\tclass=\"btn btn-success\" (click)=\"login(email.value, password.value)\"\n\t\t\t\t\tstyle=\"display: block;margin: auto;color: #fff !important;width:30%;\"\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t\t<small class=\"form-text text-muted\" style=\"text-align: center;\">\n\t\t\t\t\tDon't have an account yet ? \n\t\t\t\t\t<a href=\"/register\">Sign up !</a>\n\t\t\t\t</small>\n\t\t\t\n\t\t\t</div>\n\n\t\t\t\n\n\t\t\t<hr>\n\n\t\t\t<br>\n\n\t\t\t<div class=\"form-group\" style=\"text-align: center;\">\n\t\t\t\n\t\t\t\t<a href=\"/\" >\n\t\t\t\t\tReturn to home page\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t</form>\n\n\t</div>\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-contacts-view',\n  templateUrl: './my-contacts-view.component.html',\n  styleUrls: ['./my-contacts-view.component.scss']\n})\nexport class MyContactsViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<p>my-contacts-view works!</p>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ProfileService } from 'src/app/profile.service';\n\n\n@Component({\n  selector: 'app-registration-view',\n  templateUrl: './registration-view.component.html',\n  styleUrls: ['./registration-view.component.scss']\n})\nexport class RegistrationViewComponent implements OnInit {\n\n  \tconstructor(private profileService: ProfileService){}\n\n\tngOnInit(): void {\n\t}\n\n\tnewRandomProfile(){\n\t\tthis.profileService\n\t\t\t.createRandomProfile()\n\t\t\t.subscribe( (response: any) => {\n\t\t\tconsole.log(response);\n\t\t});\n\t}\n\n\t// Note : For this version (Showcase version), food is considered a simple 'string' and Note\n\t// ... and array\n\tnewProfile(\n\t\temail: string, password: string,\n\t\tname: string, age: number,\n\t\tfamily: string, race: string,\n\t\tfood : string\n\t){\n\t\tthis.profileService\n\t\t\t.createProfile(email, password, name, age, family, race, food)\n\t\t\t.subscribe( (response: any) => {\n\t\t\tconsole.log(response);\n\t\t});\n\t}\n\n}\n\t","<app-navbar></app-navbar>\n\n<div class=\"container focused-container\" id=\"contact-search-container\">\n\t\n\t<div class=\"row title-container\">\n\t\t<h1 class=\"col-10\">Sign up</h1>\n\t</div>\n\n\n\n\t<!-- Results list container -->\n\t<div class=\"row form-container\">\n\n\t\t\n\t\t<form action=\"/login\" method=\"\" id=\"registration-form\">\n\t\t\t\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Your email adress <span class=\"required\"></span> </label>\n\t\t\t\t<input #email type=\"email\" class=\"form-control\"\tplaceholder=\"example@provider.com\">\n\t\t\t\t<small  class=\"form-text text-muted\">Required</small>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Password <span class=\"required\"></span> </label>\n\t\t\t\t<input #password type=\"password\" class=\"form-control\"\tplaceholder=\"Choose a password\">\n\t\t\t\t<small  class=\"form-text text-muted\">Required</small>\n\t\t\t</div>\n\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Your name <span class=\"required\"></span> </label>\n\t\t\t\t<input #name type=\"text\" class=\"form-control\"\tplaceholder=\"Your name\">\n\t\t\t\t<small  class=\"form-text text-muted\">Required</small>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Your current age</label>\n\t\t\t\t<input #age type=\"number\" class=\"form-control\" >\n\t\t\t\t<small  class=\"form-text text-muted\">(Not birth dates for this version)</small>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Your family</label>\n\t\t\t\t<input #family type=\"text\" class=\"form-control\"placeholder=\"Generic pangolin family\">\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Your race</label>\n\t\t\t\t<input #race type=\"text\" class=\"form-control\" placeholder=\"Race #1\">\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>The food category you like</label>\n\t\t\t\t<input #food type=\"text\" class=\"form-control\" placeholder=\"Classic pangolin food\">\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<button \n\t\t\t\t\ttype=\"submit\" class=\"btn btn-success\" \n\t\t\t\t\t(click)=\"newProfile(email.value, password.value, name.value, age.value, family.value, race.value, food.value)\"\n\t\t\t\t>\n\t\t\t\t\tCreate your profile !\n\t\t\t\t</button>\n\t\t\t\t<small class=\"form-text text-muted\" style=\"text-align: center;\">\n\t\t\t\t\tAlready have an account ? \n\t\t\t\t\t<a href=\"/login\">Log in !</a>\n\t\t\t\t</small>\n\t\t\t</div>\n\n\t\t\t\n\n\t\t\t<hr>\n\n\t\t\t<div style=\"text-align: center;\">\n\t\t\t\tOr you can\n\t\t\t</div>\n\n\t\t\t<br>\n\n\t\t\t<div class=\"form-group\" style=\"text-align: center;\">\n\t\t\t\t<button id=\"newRandomProfile\" class=\"btn btn-warning\" (click)=\"newRandomProfile()\">\n\t\t\t\t\tCreate A Random Profile\n\t\t\t\t</button>\n\n\t\t\t\t<br>\n\n\t\t\t\t<a href=\"/\" >\n\t\t\t\t\tReturn to home page\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t</form>\n\t\t\n\n\t</div>\n\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { RequestHandlerService } from './request-handler.service';\nimport { Router } from '@angular/router';\n\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  \tconstructor(\n  \t\t\tprivate requestHandlerService : RequestHandlerService,\n  \t\t\tprivate router: Router,\n  \t\t\tprivate http: HttpClient\n  \t){}\n\n\n\n  \tlogin(email, password){\n  \t\treturn this.requestHandlerService\n\t\t\t\t\t.login_post(\n\t\t\t\t\t\t'login',\n\t\t\t\t\t\t{email, password}\n\t\t\t\t\t)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tshareReplay(),\n\t\t\t\t\t\ttap( (res: HttpResponse<any>) => {\n\n\t\t\t\t\t\t\tthis.saveSessionLocally(\n\t\t\t\t\t\t\t\tres.body._id,\n\t\t\t\t\t\t\t\tres.headers.get('x-access-token'),\n\t\t\t\t\t\t\t\tres.headers.get('x-refresh-token')\n\t\t\t\t\t\t\t);\n\n              this.router.navigateByUrl('/');\n\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n  \t}\n\n  \t\tsaveSessionLocally(id: string, token: string, refreshToken: string){\n  \t\t\tlocalStorage.setItem('_id', id);\n  \t\t\tlocalStorage.setItem('x-access-token', token);\n  \t\t\tlocalStorage.setItem('x-refresh-token', refreshToken);\n  \t\t}\n\n  \t\tgetNewToken(){\n  \t\t\treturn this.http.get(\n  \t\t\t\t'${this.requestHandlerService.ROOT}/token',\n  \t\t\t\t{ \n  \t\t\t\t\theaders:{\n  \t\t\t\t\t\t'x-refresh-token': this.getRefreshToken(),\n  \t\t\t\t\t\t'_id': this.getProfileId()\n  \t\t\t\t\t},\n  \t\t\t\t\tobserve: 'response'\n  \t\t\t\t}\n  \t\t\t).pipe(\n  \t\t\t\ttap( (res: HttpResponse<any>) => {\n  \t\t\t\t\tthis.setToken(res.headers.get('x-access-token'));\n  \t\t\t\t})\n  \t\t\t);\n  \t\t}\n\n  \tlogout(){\n  \t\tthis.destroySessionLocally();\n  \t\tconsole.log(\"logging out\");\n  \t\tthis.router.navigateByUrl('/login');\n  \t}\n\n  \t\tdestroySessionLocally(){\n  \t\t\tlocalStorage.removeItem('_id');\n  \t\t\tlocalStorage.removeItem('x-access-token');\n  \t\t\tlocalStorage.removeItem('x-refresh-token');\t\n  \t\t}\n\n  \tgetToken(){\n  \t\treturn localStorage.getItem('x-access-token');\n  \t}\n  \tgetRefreshToken(){\n  \t\treturn localStorage.getItem('x-refresh-token');\n  \t}\n  \tgetProfileId(){\n  \t\treturn localStorage.getItem('_id');\n  \t}\n\n  \tsetToken(token: string){\n  \t\tlocalStorage.setItem('x-access-token', token);\n  \t}\n\n\n\tcreateProfile(\n\t\temail: string, password: string,\n\t\tname: string, age: number,\n\t\tfamily: string, race: string,\n\t\tfood : string\n\t){\n\n\t\treturn this.requestHandlerService.post(\n\t\t\t'register',\n\t\t\t{\t\n\t\t\t\temail, password,\n\t\t\t\tname, age,\n\t\t\t\tfamily, race,\n\t\t\t\tfood\n\t\t\t}\n\t\t);\n\n\t}\n\n\t\tcreateRandomProfile(){\n\n\t\t\tlet rand_suff = Math.floor(Math.random() * 100);\n\n\t\t\treturn this.requestHandlerService.post(\n\t\t\t\t'register',\n\t\t\t\t{\n\t\t\t\t\temail: \"test#\" + rand_suff + \"@provider.com\", \n\t\t\t\t\tpassword: \"password#\" + rand_suff,\n\t\t\t\t\tname: \"Test Profile #\"+rand_suff, age: 1,\n\t\t\t\t\tfamily: \"Family #\"+rand_suff, race: \"Test Race\",\n\t\t\t\t\tfood: [\"Food1\"]\n\t\t\t\t}\n\t\t\t);\n\n\n\t\t}\n\n\tgetAllProfiles(){\n\t\treturn this.requestHandlerService.get('search');\n\t}\n\n\tgetSearchProfiles(query: string){\n\t\treturn this.requestHandlerService.get(`search/${query}`);\n\n\t}\n\n  getProfileById(id: number){\n    return this.requestHandlerService.get(`search/id/${id}`);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactSearchViewComponent } from './views/contact-search-view/contact-search-view.component';\nimport { RegistrationViewComponent } from './views/registration-view/registration-view.component';\nimport { LoginViewComponent } from './views/login-view/login-view.component';\nimport { MyContactsViewComponent } from './views/my-contacts-view/my-contacts-view.component';\nimport { ProfileViewComponent } from './views/profile-view/profile-view.component';\n\n\nconst routes: Routes = [\n\t\n\t{ path: 'search', component: ContactSearchViewComponent },\n\t\t{ path: 'recherche', redirectTo: '/search', pathMatch: 'full' },\n\t\t{ path: '', redirectTo: '/search', pathMatch: 'full' },\n\t{ path: 'search/:query', component: ContactSearchViewComponent },\n\n\n\t{ path: 'register', component: RegistrationViewComponent},\n\t\t{ path: 'inscription', redirectTo: '/register', pathMatch: 'full' },\n\n\t{ path: 'login', component: LoginViewComponent },\n\t\t{ path: 'connexion', redirectTo: '/login', pathMatch: 'full' },\n\n\t{path: 'my-contacts', component: MyContactsViewComponent},\n\t\t{path: 'mes-contacts', redirectTo: '/my-contacts', pathMatch: 'full'},\n\n\t{path: 'profile/:id', component: ProfileViewComponent},\n\t\t{path: 'me/:id', redirectTo: '/profile/:id', pathMatch: 'full'},\n\t\t{path: 'mon-profile/:id', redirectTo: '/profile/:id', pathMatch: 'full'},\t\n\t\t{path: 'my-profile/:id', redirectTo: '/profile/:id', pathMatch: 'full'}\t\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}